{"id":"wheel-arc-compare-to-displacement","sketchJSCode":"/*Rotating wheel sketch:\n * in this demo you can see that the distance traveled\n * by a non slipping wheel corresponds exactly to the \n * distance traveled accross the ground.*/\n\nfunction setup(){\n    createCanvas(640,480);\n    w = new wheel(width/4,height/2,120);\n    w.rotate = true;    //make the wheel begin rotating\n                        //at the begining.\n\n    w.ang = -90;    //set the initial starting position\n                    //to start on red.\n                    \n    w.cdecorate = true;\n    w.vdecorate = true;\n    w.rotation = true;\n    w.translation = true;\n    w.ang_speed = 2;\n    angleMode(DEGREES);\n\n    // \"on\" is used for the pause and resume at the end of file\n    // that allows for stopping/starting the sketch w/o prob.\n    on = true;\n}\nfunction draw(){\n    background(121,209,254);\n\n    //draw ground\n    noStroke();\n    fill('grey');\n    rect(0,height/2+w.r+2,width,height/2-w.r-2);\n\n    //draw the colored streaks on the ground\n    push();\n    stroke(255,0,0);\n    strokeWeight(3); \n    line(width/4,height/2+w.r,PI*w.r+width/4,height/2+w.r);\n    stroke(0,0,255);\n    line(width/4+PI*w.r,height/2+w.r,2*PI*w.r+width/4,height/2+w.r);\n    pop();\n\n    //draw the wheel.\n    w.draw();    \n\n    //code that handles the moving loop of the wheel.\n    if(w.x > 2*w.r*PI+width/4) w.x = width/4;\n    w.x += w.ang_speed/180 * w.r*PI;\n}\nfunction mouseClicked(){\n    if(on == true){\n        on = false;\n        noLoop();\n    }\n    else{\n        on = true;\n        loop();\n    }\n}\n","sketchURL":"https://github.com/ccny-physics-sims/science-library/blob/d95bebf0c1f3e29b0be1cbc263d9bebae96af0af/examples/wheel-arc-compare-to-displacement/sketch.js","repoURL":"https://github.com/ccny-physics-sims/science-library/blob/d95bebf0c1f3e29b0be1cbc263d9bebae96af0af/examples/wheel-arc-compare-to-displacement/","version":"a88ffbd3383fefb79b3152e7a0f40cc1bbfba87d"}
