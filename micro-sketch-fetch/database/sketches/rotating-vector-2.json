{"id":"rotating-vector-2","sketchJSCode":"var theta, lengthV;\n\nfunction setup() {\n  createCanvas(800, 500);\n  // the length of the vector is 100!\n  lengthV = 100;\n  //its startPoint (i.e. origin) is in the center of the canvas\n  startPoint = createVector(width / 2, height / 2);\n  //it will initially start\n  vdisp = createVector(0, -lengthV);\n  endPoint = p5.Vector.add(startPoint, vdisp)\n\n  aVector = new Arrow(startPoint, endPoint);\n  aVector.color = color('purple');\n  aVector.grab = false;\n  aVector.draggable = false;\n  aVector.showComponents = false;\n\n}\n\n\n\nfunction draw() {\n\n  background(250);\n\n  //makes an x-y coordinate axis\n  stroke('gray');\n  line(width/2,0,width/2,height);\n  line(0,height/2,width,height/2);\n\n  // sets a rotation in the CCW direction\n  theta=-frameCount/200;\n\n  //both the origin and the endpoint are moving now, but the length stays the same.\n  aVector.origin = p5.Vector.add(startPoint,createVector(2*lengthV*cos(theta),2*lengthV*sin(theta)));\n  aVector.target = p5.Vector.add(startPoint,createVector(lengthV*cos(theta),lengthV*sin(theta)));\n  aVector.update();\n  aVector.display();\n\n  //just draw some other things\n  push();\n  noFill();\n  stroke('black')\n  ellipse(width / 2, height / 2, 4*lengthV, 4*lengthV);\n  pop();\n  push();\n  fill('black');\n  ellipse(width / 2, height / 2, 5, 5);\n  pop()\n  }\n","sketchURL":"https://github.com/ccny-physics-sims/science-library/blob/d95bebf0c1f3e29b0be1cbc263d9bebae96af0af/examples/rotating-vector-2/sketch.js","repoURL":"https://github.com/ccny-physics-sims/science-library/blob/d95bebf0c1f3e29b0be1cbc263d9bebae96af0af/examples/rotating-vector-2/","version":"55fbebd9fc8af13b402cb88c7318743d17510597"}
